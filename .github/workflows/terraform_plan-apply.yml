name: 'Terraform Plan Apply'

on:
  push:
    branches: [ "main" ]

jobs:
  terraform-plan:
    name: 'Terraform test'
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Login to Azure using github secret
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generate terraform execution plan
    - name: Terraform Plan
      run: terraform plan -out=tfplan.out
    
    - name: Save Terraform Plan Artifact
      uses: actions/upload-artifact@v2
      with:
        name: tfplan
        path: tfplan.out

  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: [terraform-plan]

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Download the file 
    - name: Download Terraform Plan Artifact
      uses: actions/download-artifact@v2
      with:
        name: tfplan
        path: .tfplan.out
    
    # Apply the plan
    - name: Apply the plan
      run: terraform apply -auto-approve tfplan
    

